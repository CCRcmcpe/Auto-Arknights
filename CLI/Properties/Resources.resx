<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="StartupLogo" xml:space="preserve">
    <value>                                                                                                    
            @                      @@@#%%                                   #/                      
            @@@###    @            @@@/ %%******=-                 @@@.    ##                       
            @@@  @@@  @@@===       @@@/        (@@@                       @@@ @@                    
            @@@  @@@  @@@  =#@@@   @@@/        (@@@        @(             @@@    (@*                
            @@@&amp; @@@  @@@&amp;&amp;  @@@   @@@/        (@@@         @@@           @@@  @@%   @@@            
            @@@ &amp;@@@ @@@  &amp;&amp;@@@    @@@@####$   (@@@ *###%   @@%          @@@   @@@  @@@             
            @@@  @@@  @@@    @@@   @@@/    ###=@@@@     $#@@@//@*         @@@&amp;       @@@ @@         
    ,@@@,   @@@  @@@  @@@&amp;&amp;  @@@   @@@/        #@@@      ,@@@    @@@ @#@. @@@ %    /@@@@       (@@  
            (@@@ @@@ %@@@  &amp;&amp;@@@   @@@/        (@@@      (@@@$$$         (@@   @@@   @@@            
                     @@@     @@@   @@@/        (@@@      @@@@  $##@@@@   @@@    @@@  @@@            
                    @@@      @@@   @@#####** #@@@     *@@@      @@@@  @@.          ==@@@            
                   %@,       @@            *****@(@    @@@       @@@&amp;            %&amp;..@(             
                           @@                         .@@&amp;        @@@,             #(               
                                                     @&amp;      @   ,@*                                
                                                               %@,                                  
                                                                                                    
   本程序仅供研究学习使用     ============= [Auto Arknights] =============       REV Unit (c)2021     
                                                                                                    </value>
  </data>
  <data name="QuickHelpMessage" xml:space="preserve">
    <value>
02    刷关2次
011    刷关11次
15    刷关5次，理智耗尽时等待恢复
2    刷关到理智耗尽
2es    刷关到理智耗尽，随后关闭模拟器，使计算机睡眠
3    刷关到理智耗尽，无限等待恢复继续刷关

后续动作 [c]关机 [r]重启 [s]睡眠 [h]休眠 [e]关闭远端
</value>
  </data>
  <data name="App_NotSupported" xml:space="preserve">
    <value>CPU不支持AVX2指令集，无法运行本程序</value>
  </data>
  <data name="App_Starting" xml:space="preserve">
    <value>正在初始化设备抽象层</value>
  </data>
  <data name="App_Started" xml:space="preserve">
    <value>启动成功</value>
  </data>
  <data name="App_ParamsHint" xml:space="preserve">
    <value>&lt;模式&gt;[次数][后续动作]</value>
  </data>
  <data name="App_TaskListHeader" xml:space="preserve">
    <value>
-[任务列表]---------------------------------------

</value>
  </data>
  <data name="App_TaskListFooter" xml:space="preserve">
    <value>
--------------------------------------------------
</value>
  </data>
  <data name="App_ReadyToExecute" xml:space="preserve">
    <value>即将执行以上任务</value>
  </data>
  <data name="App_TaskBegin" xml:space="preserve">
    <value>任务[{taskId}]：开始</value>
  </data>
  <data name="App_TaskComplete" xml:space="preserve">
    <value>任务[{taskId}]完成：{message}</value>
  </data>
  <data name="App_TaskFaulted" xml:space="preserve">
    <value>任务[{taskId}]出现错误：{message}</value>
  </data>
  <data name="App_AllTasksCompleted" xml:space="preserve">
    <value>所有任务已结束</value>
  </data>
  <data name="Parameters_HelpHint" xml:space="preserve">
    <value>无效的计划，请输入 "help" 来获取快速帮助</value>
  </data>
  <data name="Parameters_Exception_InvalidMode" xml:space="preserve">
    <value>无效的计划，请输入 "help" 来获取快速帮助</value>
  </data>
  <data name="Parameters_Exception_InvalidTimes" xml:space="preserve">
    <value>无效的刷关次数值，请输入 "help" 来获取快速帮助</value>
  </data>
  <data name="Config_Exception_InvalidConfig" xml:space="preserve">
    <value>配置文件无效，请检查语法</value>
  </data>
  <data name="Config_Exception_RequirementsUnmet" xml:space="preserve">
    <value>配置文件需填写 {0}</value>
  </data>
  <data name="Config_Exception_InvalidKey" xml:space="preserve">
    <value>无法解析 {0} 的值</value>
  </data>
  <data name="Config_Exception_CannotParse" xml:space="preserve">
    <value>无法解析配置值 {0}</value>
  </data>
  <data name="Entry_FatalException" xml:space="preserve">
    <value>出现致命错误</value>
  </data>
</root>